@model LavaderoMotos.Models.Venta

@{
    ViewData["Title"] = "Editar Venta";
}

<div class="container mt-4">
    <h2 class="mb-4">Editar Venta</h2>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model == null)
    {
        <div class="alert alert-danger">
            No se encontr√≥ la venta solicitada.
        </div>
        <a asp-action="Index" class="btn btn-secondary">Volver al listado</a>
    }
    else
    {
        <form asp-action="Edit" method="post" id="editForm">
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="Fecha" />

            <div class="mb-3">
                <label asp-for="Placa" class="form-label"></label>
                <input asp-for="Placa" class="form-control" id="editPlaca" />
                <span asp-validation-for="Placa" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Kilometraje" class="form-label"></label>
                <input asp-for="Kilometraje" class="form-control" />
                <span asp-validation-for="Kilometraje" class="text-danger"></span>
            </div>

            <h4>Productos</h4>
            <div id="productos-container">
                @for (int i = 0; i < Model.Productos.Count; i++)
                {
                    <div class="producto-item mb-3 border p-3 rounded">
                        <input type="hidden" name="Productos[@i].Id" value="@Model.Productos[i].Id" />
                        <input type="hidden" name="Productos[@i].VentaId" value="@Model.Productos[i].VentaId" />
                        <div class="row">
                            <div class="col-md-4">
                                <label class="form-label">Producto</label>
                                <input name="Productos[@i].Producto" value="@Model.Productos[i].Producto" class="form-control" required />
                                <span asp-validation-for="Productos[i].Producto" class="text-danger"></span>
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">Cantidad</label>
                                <input name="Productos[@i].Cantidad" value="@Model.Productos[i].Cantidad" type="number" min="1" class="form-control cantidad-input" required />
                                <span asp-validation-for="Productos[i].Cantidad" class="text-danger"></span>
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Precio Unitario</label>
                                <input name="Productos[@i].Precio" 
                                       value="@Model.Productos[i].Precio.ToString("0.00").Replace(",", ".")" 
                                       class="form-control precio-input" 
                                       type="number"
                                       step="0.01"
                                       required />
                                <span asp-validation-for="Productos[i].Precio" class="text-danger"></span>
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">Total</label>
                                <input type="text" value="@((Model.Productos[i].Cantidad * Model.Productos[i].Precio).ToString("N0", new System.Globalization.CultureInfo("es-CO")))" class="form-control total-producto" readonly />
                            </div>
                            <div class="col-md-1 d-flex align-items-end">
                                <button type="button" class="btn btn-danger btn-sm" onclick="eliminarProducto(this)">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <button type="button" class="btn btn-outline-primary mb-3" onclick="agregarProducto()">
                <i class="bi bi-plus-circle"></i> Agregar Producto
            </button>

            <div class="mb-3">
                <h5>Total Venta: <span id="totalVenta">@Model.Total.ToString("N0", new System.Globalization.CultureInfo("es-CO"))</span></h5>
            </div>

            <div class="mb-3">
                <button type="submit" class="btn btn-primary">Actualizar</button>
                <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
            </div>
        </form>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let productoIndex = @Model?.Productos.Count ?? 0;
        const formatoMoneda = new Intl.NumberFormat('es-CO', {
            style: 'decimal',
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });

        function agregarProducto() {
            const container = document.getElementById("productos-container");
            const divProducto = document.createElement("div");
            divProducto.className = "producto-item mb-3 border p-3 rounded";
            divProducto.innerHTML = `
                <div class="row">
                    <div class="col-md-4">
                        <label class="form-label">Producto</label>
                        <input name="Productos[${productoIndex}].Producto" class="form-control" required />
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Cantidad</label>
                        <input name="Productos[${productoIndex}].Cantidad" type="number" min="1" class="form-control cantidad-input" required />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Precio Unitario</label>
                        <input name="Productos[${productoIndex}].Precio" 
                               type="number" 
                               step="0.01"
                               class="form-control precio-input" 
                               required />
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">Total</label>
                        <input type="text" class="form-control total-producto" readonly />
                    </div>
                    <div class="col-md-1 d-flex align-items-end">
                        <button type="button" class="btn btn-danger btn-sm" onclick="eliminarProducto(this)">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
            `;
            container.appendChild(divProducto);
            
            const precioInput = divProducto.querySelector('.precio-input');
            const cantidadInput = divProducto.querySelector('.cantidad-input');
            
            precioInput.addEventListener('input', function() {
                calcularTotalProducto(this);
                actualizarTotalVenta();
            });
            
            cantidadInput.addEventListener('input', function() {
                const precioInput = this.closest('.row').querySelector('.precio-input');
                calcularTotalProducto(precioInput);
                actualizarTotalVenta();
            });
            
            productoIndex++;
        }

        function eliminarProducto(button) {
            const productoItem = button.closest('.producto-item');
            productoItem.remove();
            
            const container = document.getElementById("productos-container");
            const items = container.querySelectorAll('.producto-item');
            
            items.forEach((item, index) => {
                item.querySelectorAll('[name^="Productos["]').forEach(input => {
                    const name = input.name.replace(/Productos\[\d+\]/, `Productos[${index}]`);
                    input.name = name;
                });
            });
            
            actualizarTotalVenta();
            productoIndex = items.length;
        }

        document.getElementById('editPlaca')?.addEventListener('input', function() {
            this.value = this.value.toUpperCase();
        });

        document.querySelectorAll('.precio-input').forEach(input => {
            input.addEventListener('input', function() {
                calcularTotalProducto(this);
                actualizarTotalVenta();
            });
        });

        document.querySelectorAll('.cantidad-input').forEach(input => {
            input.addEventListener('input', function() {
                const precioInput = this.closest('.row').querySelector('.precio-input');
                calcularTotalProducto(precioInput);
                actualizarTotalVenta();
            });
        });

        function calcularTotalProducto(input) {
            const row = input.closest('.row');
            const cantidadInput = row.querySelector('.cantidad-input');
            const precioInput = row.querySelector('.precio-input');
            const totalInput = row.querySelector('.total-producto');
            
            const cantidad = parseFloat(cantidadInput.value) || 0;
            const precio = parseFloat(precioInput.value) || 0;
            
            const total = cantidad * precio;
            totalInput.value = formatoMoneda.format(total);
        }

        function actualizarTotalVenta() {
            let totalVenta = 0;
            document.querySelectorAll('.total-producto').forEach(input => {
                const value = input.value.replace(/\./g, '');
                totalVenta += parseFloat(value) || 0;
            });
            
            document.getElementById('totalVenta').textContent = formatoMoneda.format(totalVenta);
        }

        document.getElementById('editForm').addEventListener('submit', function(e) {
            document.querySelectorAll('.precio-input').forEach(input => {
                input.value = parseFloat(input.value).toFixed(2);
            });
        });

        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.precio-input').forEach(input => {
                calcularTotalProducto(input);
            });
            actualizarTotalVenta();
        });
    </script>
}

<style>
    .producto-item {
        background-color: #f8f9fa;
    }
    .total-producto {
        font-weight: bold;
        background-color: #e9ecef;
    }
    #totalVenta {
        font-weight: bold;
        color: #0d6efd;
        font-size: 1.2rem;
    }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">